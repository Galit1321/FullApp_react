{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galit\\\\Desktop\\\\interview\\\\fullstack_app\\\\client\\\\src\\\\Game.js\";\nimport React, { Component } from \"react\";\nimport \"./css/Cell.css\";\nimport Cell from \"./Cell\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      name: props.name,\n      data: []\n    };\n  }\n\n  createData() {\n    let res = [];\n    let id = 1;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        res.push({\n          id: id,\n          kind: \"cell\",\n          full: false\n        });\n        id++;\n      }\n\n      this.state.data.push(res);\n      res = [];\n    }\n\n    let ran = Math.floor(Math.random() * 16) + 1;\n  }\n\n  componentDidMount() {\n    this.createData();\n    fetch('http://localhost:3001/api/getScore').then(result => result.json()).then(res => this.setState({\n      score: res.score\n    }));\n  }\n\n  render() {\n    const score = this.state.score;\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", score), React.createElement(\"p1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" Welcome to the game \")), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, data.length <= 0 ? \"NO DB ENTRIES YET\" : data.map(dat => React.createElement(\"tr\", {\n      key: dat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, dat.map(elem => React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Cell, {\n      parm: elem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\galit\\Desktop\\interview\\fullstack_app\\client\\src\\Game.js"],"names":["React","Component","Cell","Game","constructor","props","state","score","name","data","createData","res","id","i","j","push","kind","full","ran","Math","floor","random","componentDidMount","fetch","then","result","json","setState","render","length","map","dat","elem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AACxBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,CADC;AAEPC,MAAAA,IAAI,EAACH,KAAK,CAACG,IAFJ;AAGPC,MAAAA,IAAI,EAAC;AAHE,KAAX;AAKH;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAIC,GAAG,GAAC,EAAR;AACA,QAAIC,EAAE,GAAC,CAAP;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACjB,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACrBH,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACH,UAAAA,EAAE,EAACA,EAAJ;AAASI,UAAAA,IAAI,EAAE,MAAf;AAAuBC,UAAAA,IAAI,EAAE;AAA7B,SAAT;AACAL,QAAAA,EAAE;AACL;;AACD,WAAKN,KAAL,CAAWG,IAAX,CAAgBM,IAAhB,CAAqBJ,GAArB;AACAA,MAAAA,GAAG,GAAC,EAAJ;AACC;;AACD,QAAIO,GAAG,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAA+B,CAAvC;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,UAAL;AACAa,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUb,GAAG,IAAI,KAAKgB,QAAL,CAAc;AAACpB,MAAAA,KAAK,EAACI,GAAG,CAACJ;AAAX,KAAd,CAFjB;AAGH;;AAGDqB,EAAAA,MAAM,GAAE;AACJ,UAAMrB,KAAK,GAAC,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAME,IAAI,GAAE,KAAKH,KAAL,CAAWG,IAAvB;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMF,KAAN,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFA,CADQ,EAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,IAAI,CAACoB,MAAL,IAAe,CAAf,GACG,mBADH,GAEGpB,IAAI,CAACqB,GAAL,CAASC,GAAG,IACV;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,GAAG,CAACD,GAAJ,CAAQE,IAAI,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADH,CADL,CADF,CAHN,CADA,CANQ,CAAR;AAyBH;;AA5DuB;;AA8D5B,eAAe7B,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/Cell.css\";\r\nimport Cell from \"./Cell\"\r\n\r\nclass Game extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            score:0,\r\n            name:props.name,\r\n            data:[]\r\n        }\r\n    }\r\n\r\n    createData() {\r\n        let res=[];\r\n        let id=1;\r\n        for (let i=0;i<4;i++){\r\n            for (let j=0;j<4;j++){\r\n            res.push({id:id , kind: \"cell\" ,full: false,});\r\n            id++;\r\n        }\r\n        this.state.data.push(res);\r\n        res=[];\r\n        }\r\n        let ran=Math.floor(Math.random() * 16)+1; \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createData();\r\n        fetch('http://localhost:3001/api/getScore')\r\n            .then(result => result.json())\r\n            .then(res => this.setState({score:res.score}))\r\n    }\r\n\r\n\r\n    render(){\r\n        const score=this.state.score;\r\n        const data= this.state.data;\r\n        return (<div >\r\n        <div>\r\n        <h1> {score}</h1>\r\n        <p1> Welcome to the game </p1>   \r\n        </div>\r\n        \r\n        <table>\r\n        <tbody>\r\n          {data.length <= 0\r\n            ? \"NO DB ENTRIES YET\"\r\n            : data.map(dat => (\r\n                <tr  key={dat}  >\r\n                    {dat.map(elem => (\r\n                        <th> \r\n                        <Cell parm={elem} /> \r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n                </table>\r\n        \r\n    \r\n        </div>);\r\n\r\n    }\r\n} \r\nexport default Game;"]},"metadata":{},"sourceType":"module"}