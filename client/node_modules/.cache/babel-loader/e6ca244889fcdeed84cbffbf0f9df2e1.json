{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\galit\\\\Desktop\\\\interview\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\galit\\\\Desktop\\\\interview\\\\fullstack_app\\\\client\\\\src\\\\Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./css/Cell.css\";\nimport Cell from \"./Cell\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCell = () => {\n      this.data[0][0].id = 3;\n    };\n\n    let data = [];\n    this.state = {\n      score: 0,\n      name: props.name,\n      data: data\n    };\n  }\n\n  addElem() {\n    let rr1, rc1;\n\n    do {\n      rr1 = Math.floor(Math.random() * 4);\n      rc1 = Math.floor(Math.random() * 4);\n    } while (this.state.data[rr1][rc1].full);\n\n    this.setState(prevState => ({\n      data: _objectSpread({}, prevState.data, {\n        [prevState.data[rr1][rc1].full]: 2\n      })\n    }));\n  }\n\n  createData() {\n    let res = [];\n    let id = 1;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        res.push({\n          id: id,\n          kind: \"cell\",\n          full: false\n        });\n        id++;\n      }\n\n      this.state.data.push(res);\n      res = [];\n    } //this.addElem();\n    //   this.addElem();\n\n  }\n\n  componentDidMount() {\n    this.createData();\n    fetch('http://localhost:3001/api/getScore').then(result => result.json()).then(res => this.setState({\n      score: res.score\n    }));\n  }\n\n  render() {\n    const score = this.state.score;\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", score), React.createElement(\"p1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" Welcome to the game \")), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, data.length <= 0 ? \"NO DB ENTRIES YET\" : data.map(dat => React.createElement(\"tr\", {\n      key: dat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, dat.map(elem => React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Cell, {\n      parm: elem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))))), React.createElement(\"button\", {\n      onClick: this.changeCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" ClickMe\"));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:\\Users\\galit\\Desktop\\interview\\fullstack_app\\client\\src\\Game.js"],"names":["React","Component","Cell","Game","constructor","props","changeCell","data","id","state","score","name","addElem","rr1","rc1","Math","floor","random","full","setState","prevState","createData","res","i","j","push","kind","componentDidMount","fetch","then","result","json","render","length","map","dat","elem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/Cell.css\";\r\nimport Cell from \"./Cell\"\r\n\r\nclass Game extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        let data=[];\r\n        this.state={\r\n            score:0,\r\n            name:props.name,\r\n            data: data,\r\n        }\r\n    }\r\n\r\n    addElem(){\r\n        let rr1,rc1;\r\n        do {\r\n            rr1=Math.floor(Math.random() * 4); \r\n            rc1=Math.floor(Math.random() * 4);\r\n        }\r\n        while (this.state.data[rr1][rc1].full);\r\n        this.setState(prevState => ({\r\n            data: {\r\n                ...prevState.data,\r\n                [prevState.data[rr1][rc1].full]: 2,\r\n            },\r\n        })); \r\n    }\r\n\r\n    changeCell =()=>{\r\n        this.data[0][0].id=3;\r\n\r\n    \r\n    }\r\n    createData() {\r\n        let res=[];\r\n        let id=1;\r\n        for (let i=0;i<4;i++){\r\n            for (let j=0;j<4;j++){\r\n            res.push({id:id , kind: \"cell\" ,full: false,});\r\n            id++;\r\n        }\r\n        this.state.data.push(res);\r\n        res=[];\r\n        }\r\n        //this.addElem();\r\n     //   this.addElem();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createData();\r\n        fetch('http://localhost:3001/api/getScore')\r\n            .then(result => result.json())\r\n            .then(res => this.setState({score:res.score}))\r\n    }\r\n\r\n\r\n    render(){\r\n        const score=this.state.score;\r\n        const data= this.state.data;\r\n        return (<div >\r\n        <div>\r\n        <h1> {score}</h1>\r\n        <p1> Welcome to the game </p1>   \r\n        </div>\r\n        <table>\r\n        <tbody>\r\n          {data.length <= 0\r\n            ? \"NO DB ENTRIES YET\"\r\n            : data.map(dat => (\r\n                <tr  key={dat}  >\r\n                    {dat.map(elem => (\r\n                        <th> \r\n                        <Cell parm={elem} /> \r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n                </table>\r\n                    <button onClick={this.changeCell} > ClickMe</button>\r\n    \r\n        </div>);\r\n\r\n    }\r\n} \r\nexport default Game;"]},"metadata":{},"sourceType":"module"}