{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galit\\\\Desktop\\\\interview\\\\fullstack_app\\\\client\\\\src\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Field from \"./Field\";\nimport \"./css/Register.css\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePasswordChange = value => {\n      this.setState({\n        password: value\n      });\n    };\n\n    this.handleUserChange = value => {\n      this.setState({\n        user_name: value\n      });\n    };\n\n    this.handleNameChange = name_value => {\n      this.setState({\n        name: name_value\n      });\n    };\n\n    this.handleEmailChange = name_value => {\n      this.setState({\n        email: name_value\n      });\n    };\n\n    this.deleteFromDB = idTodelete => {\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id === idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      });\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      this.state.data.forEach(dat => {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          password: updateToApply\n        }\n      });\n    };\n\n    this.putDataToDB = () => {\n      console.log(\"start\");\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 10;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: this.state.name,\n        password: this.state.password,\n        email: this.state.email\n      }).then(res => {\n        const history = this.props.history;\n        console.log(res.data.success);\n\n        if (res.data.success) {\n          history.replace(\"/Login\");\n        }\n      });\n    };\n\n    this.getDataFromDb = () => {\n      fetch(\"http://localhost:3001/api/getData\").then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.state = {\n      id: 0,\n      data: [],\n      user_name: null,\n      name: null,\n      password: null,\n      email: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n  }\n  /* componentDidMount() {\r\n    this.getDataFromDb();\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n    componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }*/\n\n\n  render() {\n    //const { data } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"You want to fill out this form\")), React.createElement(\"div\", {\n      className: \"sep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type_field: \"text\",\n      title: \"Name\",\n      content: this.handleNameChange,\n      remark: \"insert name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Field, {\n      remark: \"insert password\",\n      type_field: \"password\",\n      title: \"Password\",\n      content: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Field, {\n      remark: \"insert email\",\n      type_field: \"email\",\n      title: \"Email\",\n      content: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Field, {\n      remark: \"insert username\",\n      type_field: \"user Name\",\n      title: \"UserName\",\n      content: this.handleUserChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"checkboxy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"cecky\",\n      id: \"checky\",\n      value: \"1\",\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"I accept the terms of use\"))), React.createElement(\"button\", {\n      onClick: () => this.putDataToDB(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"ADD\"));\n  }\n\n}\n\nexport default Register;\n/*\r\n<ul>\r\n          {data.length <= 0\r\n            ? \"NO DB ENTRIES YET\"\r\n            : data.map(dat => (\r\n                <li style={{ padding: \"10px\" }} key={dat}>\r\n                  <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\r\n                  <span style={{ color: \"gray\" }}> data: </span>\r\n                  {dat.name}\r\n                </li>\r\n              ))}\r\n        </ul>\r\n*/","map":{"version":3,"sources":["C:\\Users\\galit\\Desktop\\interview\\fullstack_app\\client\\src\\Register.js"],"names":["React","Component","axios","Field","Register","constructor","props","handlePasswordChange","value","setState","password","handleUserChange","user_name","handleNameChange","name_value","name","handleEmailChange","email","deleteFromDB","idTodelete","objIdToDelete","state","data","forEach","dat","id","_id","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","post","update","putDataToDB","console","log","currentIds","map","idToBeAdded","includes","then","res","history","success","replace","getDataFromDb","fetch","json","bind","intervalIsSet","idToDelete","objectToUpdate","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Field from \"./Field\";\r\nimport \"./css/Register.css\"\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.state = {\r\n      id: 0,\r\n      data: [],\r\n      user_name:null,\r\n      name: null,\r\n      password: null,\r\n      email: null,\r\n      intervalIsSet: false,\r\n      idToDelete: null,\r\n      idToUpdate: null,\r\n      objectToUpdate: null\r\n    };\r\n  }\r\n  /* componentDidMount() {\r\n    this.getDataFromDb();\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }*/\r\n  handlePasswordChange = value => {\r\n    this.setState({ password: value });\r\n  };\r\n\r\n  handleUserChange = value => {\r\n    this.setState({ user_name: value });\r\n  };\r\n\r\n\r\n  handleNameChange = name_value => {\r\n    this.setState({ name: name_value });\r\n  };\r\n\r\n  handleEmailChange = name_value => {\r\n    this.setState({ email: name_value });\r\n  };\r\n\r\n  deleteFromDB = idTodelete => {\r\n    let objIdToDelete = null;\r\n    this.state.data.forEach(dat => {\r\n      if (dat.id === idTodelete) {\r\n        objIdToDelete = dat._id;\r\n      }\r\n    });\r\n\r\n    axios.delete(\"http://localhost:3001/api/deleteData\", {\r\n      data: {\r\n        id: objIdToDelete\r\n      }\r\n    });\r\n  };\r\n\r\n  updateDB = (idToUpdate, updateToApply) => {\r\n    let objIdToUpdate = null;\r\n    this.state.data.forEach(dat => {\r\n      if (dat.id === idToUpdate) {\r\n        objIdToUpdate = dat._id;\r\n      }\r\n    });\r\n\r\n    axios.post(\"http://localhost:3001/api/updateData\", {\r\n      id: objIdToUpdate,\r\n      update: { password: updateToApply }\r\n    });\r\n  };\r\n\r\n  putDataToDB = () => {\r\n    console.log(\"start\");\r\n    let currentIds = this.state.data.map(data => data.id);\r\n    let idToBeAdded = 10;\r\n    while (currentIds.includes(idToBeAdded)) {\r\n      ++idToBeAdded;\r\n    }\r\n    axios.post(\"http://localhost:3001/api/putData\", {\r\n      id: idToBeAdded,\r\n      name: this.state.name,\r\n      password: this.state.password,\r\n      email: this.state.email,\r\n    }).then(res => {\r\n      const { history } = this.props;\r\n      console.log(res.data.success);\r\n      if(res.data.success){\r\n        history.replace(\"/Login\");\r\n       \r\n      }\r\n    });\r\n  };\r\n\r\n  getDataFromDb = () => {\r\n    fetch(\"http://localhost:3001/api/getData\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ data: res.data }));\r\n  };\r\n  render() {\r\n    //const { data } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n      <div className=\"signup\">\r\n      <div className=\"header\">\r\n        \r\n        <h3>Sign Up</h3>\r\n        \r\n        <p>You want to fill out this form</p>\r\n        \r\n    </div>\r\n    <div className=\"sep\"></div>\r\n        <Field\r\n          type_field=\"text\"\r\n          title=\"Name\"\r\n          content={this.handleNameChange}\r\n          remark=\"insert name\"\r\n        ></Field>\r\n\r\n        <Field\r\n          remark=\"insert password\"\r\n          type_field=\"password\"\r\n          title=\"Password\"\r\n          content={this.handlePasswordChange}\r\n        />\r\n        <Field\r\n          remark=\"insert email\"\r\n          type_field=\"email\"\r\n          title=\"Email\"\r\n          content={this.handleEmailChange}\r\n        />\r\n        <Field\r\n          remark=\"insert username\"\r\n          type_field=\"user Name\"\r\n          title=\"UserName\"\r\n          content={this.handleUserChange}\r\n        />\r\n          <div className=\"checkboxy\">\r\n                <input name=\"cecky\" id=\"checky\" value=\"1\" type=\"checkbox\" /><label className=\"terms\">I accept the terms of use</label>\r\n            </div>\r\n        </div>\r\n        <button onClick={() => this.putDataToDB()}>ADD</button>\r\n      </div>\r\n       \r\n \r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n/*\r\n<ul>\r\n          {data.length <= 0\r\n            ? \"NO DB ENTRIES YET\"\r\n            : data.map(dat => (\r\n                <li style={{ padding: \"10px\" }} key={dat}>\r\n                  <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\r\n                  <span style={{ color: \"gray\" }}> data: </span>\r\n                  {dat.name}\r\n                </li>\r\n              ))}\r\n        </ul>\r\n*/"]},"metadata":{},"sourceType":"module"}