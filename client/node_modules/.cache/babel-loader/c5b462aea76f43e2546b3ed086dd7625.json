{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galit\\\\Desktop\\\\interview\\\\fullstack_app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Clock from \"./Clock\";\nimport axios from \"axios\";\nimport Field from \"./Field\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePasswordChange = value => {\n      this.setState({\n        password: value\n      });\n    };\n\n    this.handleNameChange = name_value => {\n      this.setState({\n        name: name_value\n      });\n    };\n\n    this.putDataToDB = () => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: this.state.name,\n        password: this.state.password\n      });\n    };\n\n    this.getDataFromDb = () => {\n      fetch(\"http://localhost:3001/api/getData\").then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.state = {\n      id: 0,\n      data: [],\n      name: null,\n      password: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Clock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, data.length <= 0 ? \"NO DB ENTRIES YET\" : data.map(dat => React.createElement(\"li\", {\n      style: {\n        padding: \"10px\"\n      },\n      key: dat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" id: \"), \" \", dat.id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" data: \"), dat.message))), React.createElement(Field, {\n      content: this.handleNameChange,\n      remark: \"insert name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Field, {\n      remark: \"insert password\",\n      content: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.putDataToDB(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"ADD\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\galit\\Desktop\\interview\\fullstack_app\\client\\src\\App.js"],"names":["React","Component","Clock","axios","Field","App","constructor","props","handlePasswordChange","value","setState","password","handleNameChange","name_value","name","putDataToDB","currentIds","state","data","map","id","idToBeAdded","includes","post","getDataFromDb","fetch","then","json","res","bind","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","length","dat","padding","color","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Clock from \"./Clock\"\nimport axios from \"axios\";\nimport Field from \"./Field\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.state = {\n    id: 0,\n      data:[],\n      name: null,\n      password:null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n   \n  };}\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n  handlePasswordChange=(value)=>{\n    this.setState({password:value})\n  }\n\n  handleNameChange=(name_value)=>{\n    this.setState({name:name_value})\n  }\n  putDataToDB = () => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n    axios.post(\"http://localhost:3001/api/putData\", { \n      id: idToBeAdded,\n      name:this.state.name,\n      password:this.state.password\n      });\n  };\n  getDataFromDb = () => {\n    fetch(\"http://localhost:3001/api/getData\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n  render() {\n    return (\n      <div>\n      <Clock></Clock>\n      <ul>\n          {data.length <= 0 ? \"NO DB ENTRIES YET\" : data.map(dat => (\n            <li style={{ padding: \"10px\" }} key={dat}>\n              <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\n              <span style={{ color: \"gray\" }}> data: </span>\n              {dat.message}\n            </li>\n          ))}\n        </ul> \n    <Field    content={this.handleNameChange}\n    remark=\"insert name\"></Field>\n  \n    <Field remark=\"insert password\"  content={this.handlePasswordChange} />\n          <button onClick={() => this.putDataToDB()}>\n            ADD\n          </button>\n        </div>\n      \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}